// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmMos6502.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
namespace AsmMos6502;

/// <summary>
/// Operand addressing modes.
/// </summary>
public enum Mos6502AddressingMode : byte
{
    /// <summary>
    /// Undefined mode
    /// </summary>
    Unknown = 0,
    /// <summary>
    /// Absolute
    /// </summary>
    /// <remarks>Size: 3 bytes, Cycles: 3</remarks>
    Absolute = 1,
    /// <summary>
    /// AbsoluteX
    /// </summary>
    /// <remarks>Size: 3 bytes, Cycles: 3</remarks>
    AbsoluteX = 2,
    /// <summary>
    /// AbsoluteY
    /// </summary>
    /// <remarks>Size: 3 bytes, Cycles: 3</remarks>
    AbsoluteY = 3,
    /// <summary>
    /// Accumulator
    /// </summary>
    /// <remarks>Size: 1 byte, Cycles: 2</remarks>
    Accumulator = 4,
    /// <summary>
    /// Immediate
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 2</remarks>
    Immediate = 5,
    /// <summary>
    /// Implied
    /// </summary>
    /// <remarks>Size: 1 byte, Cycles: 2</remarks>
    Implied = 6,
    /// <summary>
    /// Indirect
    /// </summary>
    /// <remarks>Size: 3 bytes, Cycles: 5</remarks>
    Indirect = 7,
    /// <summary>
    /// IndirectX
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 5</remarks>
    IndirectX = 8,
    /// <summary>
    /// IndirectY
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 4</remarks>
    IndirectY = 9,
    /// <summary>
    /// Relative
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 2</remarks>
    Relative = 10,
    /// <summary>
    /// ZeroPage
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 2</remarks>
    ZeroPage = 11,
    /// <summary>
    /// ZeroPageX
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 3</remarks>
    ZeroPageX = 12,
    /// <summary>
    /// ZeroPageY
    /// </summary>
    /// <remarks>Size: 2 bytes, Cycles: 3</remarks>
    ZeroPageY = 13,
}
