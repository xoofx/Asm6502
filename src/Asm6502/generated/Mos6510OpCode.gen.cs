// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by Asm6502.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
namespace Asm6502;

/// <summary>
/// 6510 opcodes (6502 + illegal opcodes).
/// </summary>
public enum Mos6510OpCode : byte
{
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    ADC_Absolute = 0x6d,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    ADC_AbsoluteX = 0x7d,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    ADC_AbsoluteY = 0x79,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    ADC_Immediate = 0x69,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    ADC_IndirectX = 0x61,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    ADC_IndirectY = 0x71,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    ADC_ZeroPage = 0x65,
    /// <summary>
    /// Add with carry - ADC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    ADC_ZeroPageX = 0x75,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    AND_Absolute = 0x2d,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    AND_AbsoluteX = 0x3d,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    AND_AbsoluteY = 0x39,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    AND_Immediate = 0x29,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    AND_IndirectX = 0x21,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    AND_IndirectY = 0x31,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    AND_ZeroPage = 0x25,
    /// <summary>
    /// Logical AND - AND
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    AND_ZeroPageX = 0x35,
    /// <summary>
    /// Arithmetic shift left - ASL
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    ASL_Absolute = 0x0e,
    /// <summary>
    /// Arithmetic shift left - ASL
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    ASL_AbsoluteX = 0x1e,
    /// <summary>
    /// Arithmetic shift left - ASL
    /// </summary>
    /// <remarks>AddressingMode: Accumulator</remarks>
    ASL_Accumulator = 0x0a,
    /// <summary>
    /// Arithmetic shift left - ASL
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    ASL_ZeroPage = 0x06,
    /// <summary>
    /// Arithmetic shift left - ASL
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    ASL_ZeroPageX = 0x16,
    /// <summary>
    /// Branch if carry clear - BCC
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BCC_Relative = 0x90,
    /// <summary>
    /// Branch if carry set - BCS
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BCS_Relative = 0xb0,
    /// <summary>
    /// Branch if equal - BEQ
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BEQ_Relative = 0xf0,
    /// <summary>
    /// Bit test - BIT
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    BIT_Absolute = 0x2c,
    /// <summary>
    /// Bit test - BIT
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    BIT_ZeroPage = 0x24,
    /// <summary>
    /// Branch if minus - BMI
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BMI_Relative = 0x30,
    /// <summary>
    /// Branch if not equal - BNE
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BNE_Relative = 0xd0,
    /// <summary>
    /// Branch if positive - BPL
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BPL_Relative = 0x10,
    /// <summary>
    /// Break / Software Interrupt - BRK
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    BRK_Implied = 0x00,
    /// <summary>
    /// Branch if overflow clear - BVC
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BVC_Relative = 0x50,
    /// <summary>
    /// Branch if overflow set - BVS
    /// </summary>
    /// <remarks>AddressingMode: Relative</remarks>
    BVS_Relative = 0x70,
    /// <summary>
    /// Clear carry - CLC
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    CLC_Implied = 0x18,
    /// <summary>
    /// Clear decimal mode - CLD
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    CLD_Implied = 0xd8,
    /// <summary>
    /// Clear interrupt disable - CLI
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    CLI_Implied = 0x58,
    /// <summary>
    /// Clear overflow flag - CLV
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    CLV_Implied = 0xb8,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    CMP_Absolute = 0xcd,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    CMP_AbsoluteX = 0xdd,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    CMP_AbsoluteY = 0xd9,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    CMP_Immediate = 0xc9,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    CMP_IndirectX = 0xc1,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    CMP_IndirectY = 0xd1,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    CMP_ZeroPage = 0xc5,
    /// <summary>
    /// Compare - CMP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    CMP_ZeroPageX = 0xd5,
    /// <summary>
    /// Compare X register - CPX
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    CPX_Absolute = 0xec,
    /// <summary>
    /// Compare X register - CPX
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    CPX_Immediate = 0xe0,
    /// <summary>
    /// Compare X register - CPX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    CPX_ZeroPage = 0xe4,
    /// <summary>
    /// Compare Y register - CPY
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    CPY_Absolute = 0xcc,
    /// <summary>
    /// Compare Y register - CPY
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    CPY_Immediate = 0xc0,
    /// <summary>
    /// Compare Y register - CPY
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    CPY_ZeroPage = 0xc4,
    /// <summary>
    /// Decrement memory - DEC
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    DEC_Absolute = 0xce,
    /// <summary>
    /// Decrement memory - DEC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    DEC_AbsoluteX = 0xde,
    /// <summary>
    /// Decrement memory - DEC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    DEC_ZeroPage = 0xc6,
    /// <summary>
    /// Decrement memory - DEC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    DEC_ZeroPageX = 0xd6,
    /// <summary>
    /// Decrement X register - DEX
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    DEX_Implied = 0xca,
    /// <summary>
    /// Decrement Y register - DEY
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    DEY_Implied = 0x88,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    EOR_Absolute = 0x4d,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    EOR_AbsoluteX = 0x5d,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    EOR_AbsoluteY = 0x59,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    EOR_Immediate = 0x49,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    EOR_IndirectX = 0x41,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    EOR_IndirectY = 0x51,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    EOR_ZeroPage = 0x45,
    /// <summary>
    /// Logical Exclusive OR (XOR) - EOR
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    EOR_ZeroPageX = 0x55,
    /// <summary>
    /// Increment memory - INC
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    INC_Absolute = 0xee,
    /// <summary>
    /// Increment memory - INC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    INC_AbsoluteX = 0xfe,
    /// <summary>
    /// Increment memory - INC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    INC_ZeroPage = 0xe6,
    /// <summary>
    /// Increment memory - INC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    INC_ZeroPageX = 0xf6,
    /// <summary>
    /// Increment X register - INX
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    INX_Implied = 0xe8,
    /// <summary>
    /// Increment Y register - INY
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    INY_Implied = 0xc8,
    /// <summary>
    /// Unconditional Jump - JMP
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    JMP_Absolute = 0x4c,
    /// <summary>
    /// Unconditional Jump - JMP
    /// </summary>
    /// <remarks>AddressingMode: Indirect</remarks>
    JMP_Indirect = 0x6c,
    /// <summary>
    /// Jump to subroutine - JSR
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    JSR_Absolute = 0x20,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    LDA_Absolute = 0xad,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    LDA_AbsoluteX = 0xbd,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    LDA_AbsoluteY = 0xb9,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    LDA_Immediate = 0xa9,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    LDA_IndirectX = 0xa1,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    LDA_IndirectY = 0xb1,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    LDA_ZeroPage = 0xa5,
    /// <summary>
    /// Load accumulator - LDA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    LDA_ZeroPageX = 0xb5,
    /// <summary>
    /// Load X register - LDX
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    LDX_Absolute = 0xae,
    /// <summary>
    /// Load X register - LDX
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    LDX_AbsoluteY = 0xbe,
    /// <summary>
    /// Load X register - LDX
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    LDX_Immediate = 0xa2,
    /// <summary>
    /// Load X register - LDX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    LDX_ZeroPage = 0xa6,
    /// <summary>
    /// Load X register - LDX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageY</remarks>
    LDX_ZeroPageY = 0xb6,
    /// <summary>
    /// Load Y register - LDY
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    LDY_Absolute = 0xac,
    /// <summary>
    /// Load Y register - LDY
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    LDY_AbsoluteX = 0xbc,
    /// <summary>
    /// Load Y register - LDY
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    LDY_Immediate = 0xa0,
    /// <summary>
    /// Load Y register - LDY
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    LDY_ZeroPage = 0xa4,
    /// <summary>
    /// Load Y register - LDY
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    LDY_ZeroPageX = 0xb4,
    /// <summary>
    /// Logical shift right - LSR
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    LSR_Absolute = 0x4e,
    /// <summary>
    /// Logical shift right - LSR
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    LSR_AbsoluteX = 0x5e,
    /// <summary>
    /// Logical shift right - LSR
    /// </summary>
    /// <remarks>AddressingMode: Accumulator</remarks>
    LSR_Accumulator = 0x4a,
    /// <summary>
    /// Logical shift right - LSR
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    LSR_ZeroPage = 0x46,
    /// <summary>
    /// Logical shift right - LSR
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    LSR_ZeroPageX = 0x56,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    NOP_Implied = 0xea,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    ORA_Absolute = 0x0d,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    ORA_AbsoluteX = 0x1d,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    ORA_AbsoluteY = 0x19,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    ORA_Immediate = 0x09,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    ORA_IndirectX = 0x01,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    ORA_IndirectY = 0x11,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    ORA_ZeroPage = 0x05,
    /// <summary>
    /// Logical Inclusive OR - ORA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    ORA_ZeroPageX = 0x15,
    /// <summary>
    /// Push accumulator - PHA
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    PHA_Implied = 0x48,
    /// <summary>
    /// Push processor status - PHP
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    PHP_Implied = 0x08,
    /// <summary>
    /// Pull accumulator - PLA
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    PLA_Implied = 0x68,
    /// <summary>
    /// Pull processor status - PLP
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    PLP_Implied = 0x28,
    /// <summary>
    /// Rotate left - ROL
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    ROL_Absolute = 0x2e,
    /// <summary>
    /// Rotate left - ROL
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    ROL_AbsoluteX = 0x3e,
    /// <summary>
    /// Rotate left - ROL
    /// </summary>
    /// <remarks>AddressingMode: Accumulator</remarks>
    ROL_Accumulator = 0x2a,
    /// <summary>
    /// Rotate left - ROL
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    ROL_ZeroPage = 0x26,
    /// <summary>
    /// Rotate left - ROL
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    ROL_ZeroPageX = 0x36,
    /// <summary>
    /// Rotate right - ROR
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    ROR_Absolute = 0x6e,
    /// <summary>
    /// Rotate right - ROR
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    ROR_AbsoluteX = 0x7e,
    /// <summary>
    /// Rotate right - ROR
    /// </summary>
    /// <remarks>AddressingMode: Accumulator</remarks>
    ROR_Accumulator = 0x6a,
    /// <summary>
    /// Rotate right - ROR
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    ROR_ZeroPage = 0x66,
    /// <summary>
    /// Rotate right - ROR
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    ROR_ZeroPageX = 0x76,
    /// <summary>
    /// Return from interrupt - RTI
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    RTI_Implied = 0x40,
    /// <summary>
    /// Return from subroutine - RTS
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    RTS_Implied = 0x60,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    SBC_Absolute = 0xed,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    SBC_AbsoluteX = 0xfd,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    SBC_AbsoluteY = 0xf9,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: Immediate</remarks>
    SBC_Immediate = 0xe9,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    SBC_IndirectX = 0xe1,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    SBC_IndirectY = 0xf1,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    SBC_ZeroPage = 0xe5,
    /// <summary>
    /// Subtract with carry - SBC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    SBC_ZeroPageX = 0xf5,
    /// <summary>
    /// Set carry - SEC
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    SEC_Implied = 0x38,
    /// <summary>
    /// Set decimal flag - SED
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    SED_Implied = 0xf8,
    /// <summary>
    /// Set interrupt disable - SEI
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    SEI_Implied = 0x78,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    STA_Absolute = 0x8d,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX</remarks>
    STA_AbsoluteX = 0x9d,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY</remarks>
    STA_AbsoluteY = 0x99,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: IndirectX</remarks>
    STA_IndirectX = 0x81,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: IndirectY</remarks>
    STA_IndirectY = 0x91,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    STA_ZeroPage = 0x85,
    /// <summary>
    /// Store accumulator - STA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    STA_ZeroPageX = 0x95,
    /// <summary>
    /// Store X register - STX
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    STX_Absolute = 0x8e,
    /// <summary>
    /// Store X register - STX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    STX_ZeroPage = 0x86,
    /// <summary>
    /// Store X register - STX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageY</remarks>
    STX_ZeroPageY = 0x96,
    /// <summary>
    /// Store Y register - STY
    /// </summary>
    /// <remarks>AddressingMode: Absolute</remarks>
    STY_Absolute = 0x8c,
    /// <summary>
    /// Store Y register - STY
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage</remarks>
    STY_ZeroPage = 0x84,
    /// <summary>
    /// Store Y register - STY
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX</remarks>
    STY_ZeroPageX = 0x94,
    /// <summary>
    /// Transfer acc to X - TAX
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    TAX_Implied = 0xaa,
    /// <summary>
    /// Transfer acc to Y - TAY
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    TAY_Implied = 0xa8,
    /// <summary>
    /// Transfer stack pointer to X - TSX
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    TSX_Implied = 0xba,
    /// <summary>
    /// Transfer X to acc - TXA
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    TXA_Implied = 0x8a,
    /// <summary>
    /// Transfer X to SP - TXS
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    TXS_Implied = 0x9a,
    /// <summary>
    /// Transfer Y to acc - TYA
    /// </summary>
    /// <remarks>AddressingMode: Implied</remarks>
    TYA_Implied = 0x98,
    /// <summary>
    /// AND then LSR - ALR
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    ALR_Immediate = 0x4b,
    /// <summary>
    /// AND then set carry - ANC
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    ANC_Immediate = 0x0b,
    /// <summary>
    /// AND then set carry - ANC
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    ANC_2B_Immediate = 0x2b,
    /// <summary>
    /// Undocumented: AND with X then AND operand - ANE
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal (unstable) opcode.</remarks>
    ANE_Immediate = 0x8b,
    /// <summary>
    /// AND then ROR - ARR
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    ARR_Immediate = 0x6b,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    DCP_Absolute = 0xcf,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    DCP_AbsoluteX = 0xdf,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    DCP_AbsoluteY = 0xdb,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    DCP_IndirectX = 0xc3,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    DCP_IndirectY = 0xd3,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    DCP_ZeroPage = 0xc7,
    /// <summary>
    /// DEC then CMP - DCP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    DCP_ZeroPageX = 0xd7,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    ISC_Absolute = 0xef,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    ISC_AbsoluteX = 0xff,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    ISC_AbsoluteY = 0xfb,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    ISC_IndirectX = 0xe3,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    ISC_IndirectY = 0xf3,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    ISC_ZeroPage = 0xe7,
    /// <summary>
    /// INC then SBC - ISC
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    ISC_ZeroPageX = 0xf7,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_Implied = 0x02,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_12_Implied = 0x12,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_22_Implied = 0x22,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_32_Implied = 0x32,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_42_Implied = 0x42,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_52_Implied = 0x52,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_62_Implied = 0x62,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_72_Implied = 0x72,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_92_Implied = 0x92,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_B2_Implied = 0xb2,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_D2_Implied = 0xd2,
    /// <summary>
    /// Jam the CPU (halt) - JAM
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    JAM_F2_Implied = 0xf2,
    /// <summary>
    /// Load accumulator and transfer SP to X - LAS
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    LAS_AbsoluteY = 0xbb,
    /// <summary>
    /// LDA then LDX - LAX
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    LAX_Absolute = 0xaf,
    /// <summary>
    /// LDA then LDX - LAX
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    LAX_AbsoluteY = 0xbf,
    /// <summary>
    /// LDA then LDX - LAX
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    LAX_IndirectX = 0xa3,
    /// <summary>
    /// LDA then LDX - LAX
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    LAX_IndirectY = 0xb3,
    /// <summary>
    /// LDA then LDX - LAX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    LAX_ZeroPage = 0xa7,
    /// <summary>
    /// LDA then LDX - LAX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageY. This is an illegal opcode.</remarks>
    LAX_ZeroPageY = 0xb7,
    /// <summary>
    /// LDA then LDX - LXA
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal (unstable) opcode.</remarks>
    LXA_Immediate = 0xab,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    NOP_Absolute = 0x0c,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    NOP_AbsoluteX = 0x1c,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    NOP_3C_AbsoluteX = 0x3c,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    NOP_5C_AbsoluteX = 0x5c,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    NOP_7C_AbsoluteX = 0x7c,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    NOP_DC_AbsoluteX = 0xdc,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    NOP_FC_AbsoluteX = 0xfc,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    NOP_Immediate = 0x80,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    NOP_82_Immediate = 0x82,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    NOP_89_Immediate = 0x89,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    NOP_C2_Immediate = 0xc2,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    NOP_E2_Immediate = 0xe2,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    NOP_1A_Implied = 0x1a,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    NOP_3A_Implied = 0x3a,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    NOP_5A_Implied = 0x5a,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    NOP_7A_Implied = 0x7a,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    NOP_DA_Implied = 0xda,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: Implied. This is an illegal opcode.</remarks>
    NOP_FA_Implied = 0xfa,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    NOP_ZeroPage = 0x04,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    NOP_44_ZeroPage = 0x44,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    NOP_64_ZeroPage = 0x64,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    NOP_ZeroPageX = 0x14,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    NOP_34_ZeroPageX = 0x34,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    NOP_54_ZeroPageX = 0x54,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    NOP_74_ZeroPageX = 0x74,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    NOP_D4_ZeroPageX = 0xd4,
    /// <summary>
    /// No operation - NOP
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    NOP_F4_ZeroPageX = 0xf4,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    RLA_Absolute = 0x2f,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    RLA_AbsoluteX = 0x3f,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    RLA_AbsoluteY = 0x3b,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    RLA_IndirectX = 0x23,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    RLA_IndirectY = 0x33,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    RLA_ZeroPage = 0x27,
    /// <summary>
    /// ROL then AND - RLA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    RLA_ZeroPageX = 0x37,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    RRA_Absolute = 0x6f,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    RRA_AbsoluteX = 0x7f,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    RRA_AbsoluteY = 0x7b,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    RRA_IndirectX = 0x63,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    RRA_IndirectY = 0x73,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    RRA_ZeroPage = 0x67,
    /// <summary>
    /// ROR then ADC - RRA
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    RRA_ZeroPageX = 0x77,
    /// <summary>
    /// Store accumulator AND X - SAX
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    SAX_Absolute = 0x8f,
    /// <summary>
    /// Store accumulator AND X - SAX
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    SAX_IndirectX = 0x83,
    /// <summary>
    /// Store accumulator AND X - SAX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    SAX_ZeroPage = 0x87,
    /// <summary>
    /// Store accumulator AND X - SAX
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageY. This is an illegal opcode.</remarks>
    SAX_ZeroPageY = 0x97,
    /// <summary>
    /// Compute (A AND X) then subtract with carry - SBX
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    SBX_Immediate = 0xcb,
    /// <summary>
    /// Store A AND X AND (high address + 1) - SHA
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    SHA_AbsoluteY = 0x9f,
    /// <summary>
    /// Store A AND X AND (high address + 1) - SHA
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal (unstable) opcode.</remarks>
    SHA_IndirectY = 0x93,
    /// <summary>
    /// Store A AND X AND (high address + 1) - SHX
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal (unstable) opcode.</remarks>
    SHX_AbsoluteY = 0x9e,
    /// <summary>
    /// Store Y AND (high address + 1) - SHY
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal (unstable) opcode.</remarks>
    SHY_AbsoluteX = 0x9c,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    SLO_Absolute = 0x0f,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    SLO_AbsoluteX = 0x1f,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    SLO_AbsoluteY = 0x1b,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    SLO_IndirectX = 0x03,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    SLO_IndirectY = 0x13,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    SLO_ZeroPage = 0x07,
    /// <summary>
    /// ASL then ORA - SLO
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    SLO_ZeroPageX = 0x17,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: Absolute. This is an illegal opcode.</remarks>
    SRE_Absolute = 0x4f,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteX. This is an illegal opcode.</remarks>
    SRE_AbsoluteX = 0x5f,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal opcode.</remarks>
    SRE_AbsoluteY = 0x5b,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: IndirectX. This is an illegal opcode.</remarks>
    SRE_IndirectX = 0x43,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: IndirectY. This is an illegal opcode.</remarks>
    SRE_IndirectY = 0x53,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: ZeroPage. This is an illegal opcode.</remarks>
    SRE_ZeroPage = 0x47,
    /// <summary>
    /// LSR then EOR - SRE
    /// </summary>
    /// <remarks>AddressingMode: ZeroPageX. This is an illegal opcode.</remarks>
    SRE_ZeroPageX = 0x57,
    /// <summary>
    /// Transfer A AND X to SP, store A AND X AND (high address + 1) - TAS
    /// </summary>
    /// <remarks>AddressingMode: AbsoluteY. This is an illegal (unstable) opcode.</remarks>
    TAS_AbsoluteY = 0x9b,
    /// <summary>
    /// SBC with NOP behavior - USBC
    /// </summary>
    /// <remarks>AddressingMode: Immediate. This is an illegal opcode.</remarks>
    USBC_Immediate = 0xeb,
}
